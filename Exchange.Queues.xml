<?xml version="1.0" encoding="utf-8"?><ManagementPack ContentReadable="true" SchemaVersion="2.0" OriginalSchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <Manifest>
    <Identity>
      <ID>Exchange.Queues</ID>
      <Version>15.0.669.22</Version>
    </Identity>
    <Name>Exchange.Queues</Name>
    <References>
      <Reference Alias="Exchange2013">
        <ID>Microsoft.Exchange.15</ID>
        <Version>15.0.669.22</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="MSDL">
        <ID>Microsoft.SystemCenter.DataWarehouse.Library</ID>
        <Version>7.1.10226.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Performance">
        <ID>System.Performance.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="MSVL">
        <ID>Microsoft.SystemCenter.Visualization.Library</ID>
        <Version>7.1.10226.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="MSIL">
        <ID>Microsoft.SystemCenter.InstanceGroup.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="MSVCL">
        <ID>Microsoft.SystemCenter.Visualization.Component.Library</ID>
        <Version>7.1.10226.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="Exchange.Queues.Server" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false" Extension="false" />
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="ExchangeServer.Hosts.QueueServer.Relationship" Accessibility="Public" Abstract="false" Base="System!System.Hosting">
          <Source ID="Source" MinCardinality="0" MaxCardinality="2147483647" Type="Exchange2013!Microsoft.Exchange.15.Server" />
          <Target ID="Target" MinCardinality="0" MaxCardinality="2147483647" Type="Exchange.Queues.Server" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="Exchange.Queues.Server.Discovery" Enabled="true" Target="Exchange2013!Microsoft.Exchange.15.Server" ConfirmDelivery="true" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Exchange.Queues.Server" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
          <IntervalSeconds>86400</IntervalSeconds>
          <SyncTime />
          <ScriptName>Exchange.Queues.Server.Discovery.ps1</ScriptName>
          <ScriptBody>
#=================================================================================
#  Exchange 2013 (and later) Queue Server Role Discovery Script
#
#  Author: Kevin Holman
#  v1.0
#=================================================================================
param($SourceId,$ManagedEntityId,[string]$ComputerName,[string]$MGName,[string]$ExchServerName)


# Manual Testing section - put stuff here for manually testing script - typically parameters:
#=================================================================================
# $SourceId = '{00000000-0000-0000-0000-000000000000}'
# $ManagedEntityId = '{00000000-0000-0000-0000-000000000000}'
# $ComputerName = "computername.domain.com"
# $MGName = "MGNAME"
#=================================================================================


# Constants section - modify stuff here:
#=================================================================================
# Assign script name variable for use in event logging.  
# ScriptName should be the same as the ID of the module that the script is contained in
$ScriptName = "Exchange.Queues.Server.Discovery.ps1"
$EventID = "1470"
#=================================================================================


# Starting Script section - All scripts get this
#=================================================================================
# Gather the start time of the script
$StartTime = Get-Date
#Set variable to be used in logging events
$whoami = whoami
# Load MOMScript API
$momapi = New-Object -comObject MOM.ScriptAPI
#Log script event that we are starting task
$momapi.LogScriptEvent($ScriptName,$EventID,0,"`nScript is starting. `nRunning as ($whoami). `nMGName: ($MGName). Exchange Server Name: ($ExchServerName).")
#=================================================================================


# Discovery Script section - Discovery scripts get this
#=================================================================================
# Load SCOM Discovery module
$DiscoveryData = $momapi.CreateDiscoveryData(0,$SourceId,$ManagedEntityId)
#=================================================================================


# Begin MAIN script section
#=================================================================================
#Load the Exchange snapin if not exists
IF (!(Get-PSSnapin Microsoft.Exchange.Management.PowerShell.E2010 -ErrorAction:SilentlyContinue))
{
  Add-PSSnapin Microsoft.Exchange.Management.PowerShell.E2010
}

# Get the Exchange Server object
$ExchangeServerObj = Get-ExchangeServer -Identity "EXCH1.opsmgr.net"
IF ($ExchangeServerObj -eq $null)
{
  $momapi.LogScriptEvent($ScriptName,$EventID,1,"`nFATAL ERROR - cannot get Exchange Server object via PowerShell. `nTerminating Script. `nError is ($Error).")
  EXIT
}

IF ($ExchangeServerObj.IsHubTransportServer -eq "True" -or $ExchangeServerObj.IsEdgeServer -eq "True")
{
  #This is an Exchange 2013 or later Hub or Edge server with queues
  $instance = $DiscoveryData.CreateClassInstance("$MPElement[Name='Exchange.Queues.Server']$")
  $instance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $ComputerName)
  $instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $ComputerName)
  $instance.AddProperty("$MPElement[Name='Exchange2013!Microsoft.Exchange.15.Server']/Name$", $ExchServerName)
  $DiscoveryData.AddInstance($instance)
}

# Return Discovery Items Normally           
$DiscoveryData
# Return Discovery Bag to the command line for testing (does not work from ISE)
# $momapi.Return($DiscoveryData)
#=================================================================================


# End of script section
#=================================================================================
#Log an event for script ending and total execution time.
$EndTime = Get-Date
$ScriptTime = ($EndTime - $StartTime).TotalSeconds
$momapi.LogScriptEvent($ScriptName,$EventID,0,"`nScript Completed. `nRuntime: ($ScriptTime) seconds.")
#=================================================================================
# End of script
                    </ScriptBody>
          <Parameters>
            <Parameter>
              <Name>SourceId</Name>
              <Value>$MPElement$</Value>
            </Parameter>
            <Parameter>
              <Name>ManagedEntityId</Name>
              <Value>$Target/Id$</Value>
            </Parameter>
            <Parameter>
              <Name>ComputerName</Name>
              <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
            </Parameter>
            <Parameter>
              <Name>MGName</Name>
              <Value>$Target/ManagementGroup/Name$</Value>
            </Parameter>
            <Parameter>
              <Name>ExchServerName</Name>
              <Value>$Target/Property[Type="Exchange2013!Microsoft.Exchange.15.Server"]/Name$</Value>
            </Parameter>
          </Parameters>
          <TimeoutSeconds>300</TimeoutSeconds>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Rules>
      <Rule ID="Exchange.Queues.ActiveMailboxDeliveryQueueLength.PerformanceCollection.Rule" Enabled="true" Target="Exchange.Queues.Server" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Performance!System.Performance.OptimizedDataProvider">
            <ComputerName>.</ComputerName>
            <CounterName>Active Mailbox Delivery Queue Length</CounterName>
            <ObjectName>MSExchangeTransport Queues</ObjectName>
            <InstanceName>_Total</InstanceName>
            <AllInstances>false</AllInstances>
            <Frequency>900</Frequency>
            <Tolerance>0</Tolerance>
            <ToleranceType>Absolute</ToleranceType>
            <MaximumSampleSeparation>4</MaximumSampleSeparation>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="Exchange.Queues.ActiveNonSmtpDeliveryQueueLength.PerformanceCollection.Rule" Enabled="true" Target="Exchange.Queues.Server" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Performance!System.Performance.OptimizedDataProvider">
            <ComputerName>.</ComputerName>
            <CounterName>Active Non-Smtp Delivery Queue Length</CounterName>
            <ObjectName>MSExchangeTransport Queues</ObjectName>
            <InstanceName>_Total</InstanceName>
            <AllInstances>false</AllInstances>
            <Frequency>900</Frequency>
            <Tolerance>0</Tolerance>
            <ToleranceType>Absolute</ToleranceType>
            <MaximumSampleSeparation>4</MaximumSampleSeparation>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="Exchange.Queues.ExternalActiveRemoteDeliveryqueueLength.PerformanceCollection.Rule" Enabled="true" Target="Exchange.Queues.Server" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Performance!System.Performance.OptimizedDataProvider">
            <ComputerName>.</ComputerName>
            <CounterName>External Active Remote Delivery Queue Length</CounterName>
            <ObjectName>MSExchangeTransport Queues</ObjectName>
            <InstanceName>_Total</InstanceName>
            <AllInstances>false</AllInstances>
            <Frequency>900</Frequency>
            <Tolerance>0</Tolerance>
            <ToleranceType>Absolute</ToleranceType>
            <MaximumSampleSeparation>4</MaximumSampleSeparation>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="Exchange.Queues.ExternalAggregateDeliveryQueueLength.PerformanceCollection.Rule" Enabled="true" Target="Exchange.Queues.Server" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Performance!System.Performance.OptimizedDataProvider">
            <ComputerName>.</ComputerName>
            <CounterName>External Aggregate Delivery Queue Length (All External Queues)</CounterName>
            <ObjectName>MSExchangeTransport Queues</ObjectName>
            <InstanceName>_Total</InstanceName>
            <AllInstances>false</AllInstances>
            <Frequency>900</Frequency>
            <Tolerance>0</Tolerance>
            <ToleranceType>Absolute</ToleranceType>
            <MaximumSampleSeparation>4</MaximumSampleSeparation>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="Exchange.Queues.ExternalRetryRemoteDeliveryQueueLength.PerformanceCollection.Rule" Enabled="true" Target="Exchange.Queues.Server" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Performance!System.Performance.OptimizedDataProvider">
            <ComputerName>.</ComputerName>
            <CounterName>External Retry Remote Delivery Queue Length</CounterName>
            <ObjectName>MSExchangeTransport Queues</ObjectName>
            <InstanceName>_Total</InstanceName>
            <AllInstances>false</AllInstances>
            <Frequency>900</Frequency>
            <Tolerance>0</Tolerance>
            <ToleranceType>Absolute</ToleranceType>
            <MaximumSampleSeparation>4</MaximumSampleSeparation>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="Exchange.Queues.InternalAggregateDeliveryQueueLength.PerformanceCollection.Rule" Enabled="true" Target="Exchange.Queues.Server" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Performance!System.Performance.OptimizedDataProvider">
            <ComputerName>.</ComputerName>
            <CounterName>Internal Aggregate Delivery Queue Length (All Internal Queues)</CounterName>
            <ObjectName>MSExchangeTransport Queues</ObjectName>
            <InstanceName>_Total</InstanceName>
            <AllInstances>false</AllInstances>
            <Frequency>900</Frequency>
            <Tolerance>0</Tolerance>
            <ToleranceType>Absolute</ToleranceType>
            <MaximumSampleSeparation>4</MaximumSampleSeparation>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="Exchange.Queues.InternalRetryRemoteDeliveryQueueLength.PerformanceCollection.Rule" Enabled="true" Target="Exchange.Queues.Server" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Performance!System.Performance.OptimizedDataProvider">
            <ComputerName>.</ComputerName>
            <CounterName>Internal Retry Remote Delivery Queue Length</CounterName>
            <ObjectName>MSExchangeTransport Queues</ObjectName>
            <InstanceName>_Total</InstanceName>
            <AllInstances>false</AllInstances>
            <Frequency>900</Frequency>
            <Tolerance>0</Tolerance>
            <ToleranceType>Absolute</ToleranceType>
            <MaximumSampleSeparation>4</MaximumSampleSeparation>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="Exchange.Queues.RetryNonSmtpDeliveryQueueLength.PerformanceCollection.Rule" Enabled="true" Target="Exchange.Queues.Server" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Performance!System.Performance.OptimizedDataProvider">
            <ComputerName>.</ComputerName>
            <CounterName>Retry Non-Smtp Delivery Queue Length</CounterName>
            <ObjectName>MSExchangeTransport Queues</ObjectName>
            <InstanceName>_Total</InstanceName>
            <AllInstances>false</AllInstances>
            <Frequency>900</Frequency>
            <Tolerance>0</Tolerance>
            <ToleranceType>Absolute</ToleranceType>
            <MaximumSampleSeparation>4</MaximumSampleSeparation>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="Exchange.Queues.SubmissionQueueLength.PerformanceCollection.Rule" Enabled="true" Target="Exchange.Queues.Server" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Performance!System.Performance.OptimizedDataProvider">
            <ComputerName>.</ComputerName>
            <CounterName>Submission Queue Length</CounterName>
            <ObjectName>MSExchangeTransport Queues</ObjectName>
            <InstanceName>_Total</InstanceName>
            <AllInstances>false</AllInstances>
            <Frequency>900</Frequency>
            <Tolerance>0</Tolerance>
            <ToleranceType>Absolute</ToleranceType>
            <MaximumSampleSeparation>4</MaximumSampleSeparation>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="Exchange.Queues.UnreachableQueueLength.PerformanceCollection.Rule" Enabled="true" Target="Exchange.Queues.Server" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Performance!System.Performance.OptimizedDataProvider">
            <ComputerName>.</ComputerName>
            <CounterName>Unreachable Queue Length</CounterName>
            <ObjectName>MSExchangeTransport Queues</ObjectName>
            <InstanceName>_Total</InstanceName>
            <AllInstances>false</AllInstances>
            <Frequency>900</Frequency>
            <Tolerance>0</Tolerance>
            <ToleranceType>Absolute</ToleranceType>
            <MaximumSampleSeparation>4</MaximumSampleSeparation>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
    </Rules>
    <Monitors>
      <UnitMonitor ID="Exchange.Queues.ExternalAggregateDeliveryQueueLength.Monitor" Accessibility="Public" Enabled="true" Target="Exchange.Queues.Server" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Performance!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false">
        <Category>PerformanceHealth</Category>
        <AlertSettings AlertMessage="Exchange.Queues.ExternalAggregateDeliveryQueueLength.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Warning</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/SampleValue$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="ConditionFalse" MonitorTypeStateID="ConditionFalse" HealthState="Success" />
          <OperationalState ID="ConditionTrue" MonitorTypeStateID="ConditionTrue" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <CounterName>External Aggregate Delivery Queue Length (All External Queues)</CounterName>
          <ObjectName>MSExchangeTransport Queues</ObjectName>
          <InstanceName>_Total</InstanceName>
          <AllInstances>false</AllInstances>
          <Frequency>60</Frequency>
          <Threshold>5000</Threshold>
          <Direction>greater</Direction>
          <NumSamples>2</NumSamples>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Exchange.Queues.ExternalRetryRemoteDeliveryQueue.Monitor" Accessibility="Public" Enabled="true" Target="Exchange.Queues.Server" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Performance!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Exchange.Queues.ExternalRetryRemoteDeliveryQueue.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Warning</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/SampleValue$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="ConditionFalse" MonitorTypeStateID="ConditionFalse" HealthState="Success" />
          <OperationalState ID="ConditionTrue" MonitorTypeStateID="ConditionTrue" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <CounterName>External Retry Remote Delivery Queue Length</CounterName>
          <ObjectName>MSExchangeTransport Queues</ObjectName>
          <InstanceName>_Total</InstanceName>
          <AllInstances>false</AllInstances>
          <Frequency>60</Frequency>
          <Threshold>5000</Threshold>
          <Direction>greater</Direction>
          <NumSamples>2</NumSamples>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Exchange.Queues.InternalAggregateDeliveryQueueLength.Monitor" Accessibility="Public" Enabled="true" Target="Exchange.Queues.Server" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Performance!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Exchange.Queues.InternalAggregateDeliveryQueueLength.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Warning</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/SampleValue$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="ConditionFalse" MonitorTypeStateID="ConditionFalse" HealthState="Success" />
          <OperationalState ID="ConditionTrue" MonitorTypeStateID="ConditionTrue" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <CounterName>Internal Aggregate Delivery Queue Length (All Internal Queues)</CounterName>
          <ObjectName>MSExchangeTransport Queues</ObjectName>
          <InstanceName>_Total</InstanceName>
          <AllInstances>false</AllInstances>
          <Frequency>60</Frequency>
          <Threshold>5000</Threshold>
          <Direction>greater</Direction>
          <NumSamples>2</NumSamples>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Exchange.Queues.InternalRetryRemoteDeliveryQueueLength.Monitor" Accessibility="Public" Enabled="true" Target="Exchange.Queues.Server" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Performance!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Exchange.Queues.InternalRetryRemoteDeliveryQueueLength.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Warning</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/SampleValue$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="ConditionFalse" MonitorTypeStateID="ConditionFalse" HealthState="Success" />
          <OperationalState ID="ConditionTrue" MonitorTypeStateID="ConditionTrue" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <CounterName>Internal Retry Remote Delivery Queue Length</CounterName>
          <ObjectName>MSExchangeTransport Queues</ObjectName>
          <InstanceName>_Total</InstanceName>
          <AllInstances>false</AllInstances>
          <Frequency>60</Frequency>
          <Threshold>5000</Threshold>
          <Direction>greater</Direction>
          <NumSamples>2</NumSamples>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Exchange.Queues.RetryNonSmtpDeliveryQueueLength.Monitor" Accessibility="Public" Enabled="true" Target="Exchange.Queues.Server" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Performance!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Exchange.Queues.RetryNonSmtpDeliveryQueueLength.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Warning</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/SampleValue$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="ConditionFalse" MonitorTypeStateID="ConditionFalse" HealthState="Success" />
          <OperationalState ID="ConditionTrue" MonitorTypeStateID="ConditionTrue" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <CounterName>Retry Non-Smtp Delivery Queue Length</CounterName>
          <ObjectName>MSExchangeTransport Queues</ObjectName>
          <InstanceName>_Total</InstanceName>
          <AllInstances>false</AllInstances>
          <Frequency>60</Frequency>
          <Threshold>5000</Threshold>
          <Direction>greater</Direction>
          <NumSamples>2</NumSamples>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Exchange.Queues.RetryMailboxDeliveryQueueLength.Monitor" Accessibility="Public" Enabled="true" Target="Exchange.Queues.Server" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Performance!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Exchange.Queues.RetryMailboxDeliveryQueueLength.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Warning</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/SampleValue$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="ConditionFalse" MonitorTypeStateID="ConditionFalse" HealthState="Success" />
          <OperationalState ID="ConditionTrue" MonitorTypeStateID="ConditionTrue" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <CounterName>Retry Mailbox Delivery Queue Length</CounterName>
          <ObjectName>MSExchangeTransport Queues</ObjectName>
          <InstanceName>_Total</InstanceName>
          <AllInstances>false</AllInstances>
          <Frequency>60</Frequency>
          <Threshold>5000</Threshold>
          <Direction>greater</Direction>
          <NumSamples>2</NumSamples>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Exchange.Queues.SubmissionQueueLength.Monitor" Accessibility="Public" Enabled="true" Target="Exchange.Queues.Server" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Performance!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Exchange.Queues.SubmissionQueueLength.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Warning</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/SampleValue$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="ConditionFalse" MonitorTypeStateID="ConditionFalse" HealthState="Success" />
          <OperationalState ID="ConditionTrue" MonitorTypeStateID="ConditionTrue" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <CounterName>Submission Queue Length</CounterName>
          <ObjectName>MSExchangeTransport Queues</ObjectName>
          <InstanceName>_Total</InstanceName>
          <AllInstances>false</AllInstances>
          <Frequency>60</Frequency>
          <Threshold>5000</Threshold>
          <Direction>greater</Direction>
          <NumSamples>2</NumSamples>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Exchange.Queues.UnreachableQueueLength.Monitor" Accessibility="Public" Enabled="true" Target="Exchange.Queues.Server" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" TypeID="Performance!System.Performance.ConsecutiveSamplesThreshold" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Exchange.Queues.UnreachableQueueLength.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Warning</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/SampleValue$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="ConditionFalse" MonitorTypeStateID="ConditionFalse" HealthState="Success" />
          <OperationalState ID="ConditionTrue" MonitorTypeStateID="ConditionTrue" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName>$Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <CounterName>Unreachable Queue Length</CounterName>
          <ObjectName>MSExchangeTransport Queues</ObjectName>
          <InstanceName>_Total</InstanceName>
          <AllInstances>false</AllInstances>
          <Frequency>60</Frequency>
          <Threshold>5000</Threshold>
          <Direction>greater</Direction>
          <NumSamples>2</NumSamples>
        </Configuration>
      </UnitMonitor>
      <DependencyMonitor ID="Exchange.Queues.QueueServerToExchangeServer.Performance.Rollup.Monitor" Accessibility="Public" Enabled="true" Target="Exchange2013!Microsoft.Exchange.15.Server" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="true" Priority="Normal" RelationshipType="ExchangeServer.Hosts.QueueServer.Relationship" MemberMonitor="Health!System.Health.PerformanceState">
        <Category>Custom</Category>
        <Algorithm>WorstOf</Algorithm>
        <MemberUnAvailable>Error</MemberUnAvailable>
      </DependencyMonitor>
    </Monitors>
  </Monitoring>
  <Presentation>
    <Views>
      <View ID="Exchange.Queues.Server.State.View" Accessibility="Public" Enabled="true" Target="Exchange.Queues.Server" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria />
        <Presentation>
          <ColumnInfo Index="0" SortIndex="-1" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>State</Name>
            <Id>Exchange.Queues.Server</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="22" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>InMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="150" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Display Name</Name>
            <Id>DisplayName</Id>
          </ColumnInfo>	
        </Presentation>		  
      </View>
      <View ID="Exchange.Queues.Server.Performance.View" Accessibility="Public" Enabled="true" Target="Exchange.Queues.Server" TypeID="SC!Microsoft.SystemCenter.PerformanceViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria />
        <Target />
      </View>
    </Views>
    <Folders>
      <Folder ID="Exchange.Queues.Root.Folder" Accessibility="Public" ParentFolder="Exchange2013!Microsoft.Exchange.15.RootFolder" />
    </Folders>
    <FolderItems>
      <FolderItem ElementID="Exchange.Queues.Server.State.View" ID="Exchange.Queues.Server.State.View.FolderItem" Folder="Exchange.Queues.Root.Folder" />
      <FolderItem ElementID="Exchange.Queues.Server.Performance.View" ID="Exchange.Queues.Server.Performance.View.FolderItem" Folder="Exchange.Queues.Root.Folder" />
    </FolderItems>
    <StringResources>
      <StringResource ID="Exchange.Queues.ExternalAggregateDeliveryQueueLength.Monitor.AlertMessage" />
      <StringResource ID="Exchange.Queues.InternalAggregateDeliveryQueueLength.Monitor.AlertMessage" />
      <StringResource ID="Exchange.Queues.SubmissionQueueLength.Monitor.AlertMessage" />
      <StringResource ID="Exchange.Queues.ExternalRetryRemoteDeliveryQueue.Monitor.AlertMessage" />
      <StringResource ID="Exchange.Queues.InternalRetryRemoteDeliveryQueueLength.Monitor.AlertMessage" />
      <StringResource ID="Exchange.Queues.RetryNonSmtpDeliveryQueueLength.Monitor.AlertMessage" />
      <StringResource ID="Exchange.Queues.RetryMailboxDeliveryQueueLength.Monitor.AlertMessage" />
      <StringResource ID="Exchange.Queues.UnreachableQueueLength.Monitor.AlertMessage" />
    </StringResources>
    <ComponentTypes>
      <ComponentType ID="UIGenerated_3003da559f8d4b6380888ab4f7cd2abf_ExchangeQueues" Accessibility="Public" Base="MSVL!Microsoft.SystemCenter.Visualization.GridLayout" Lifetime="ReferenceCount" />
      <ComponentType ID="UIGenerated_6fb4e110084046579526d585004e81e5_Queues" Accessibility="Public" Base="MSVCL!Microsoft.SystemCenter.Visualization.Component.Library.PowershellGridWidget" Lifetime="ReferenceCount" />
    </ComponentTypes>
    <ComponentReferences>
      <ComponentReference ID="UIGenerated_3003da559f8d4b6380888ab4f7cd2abf_ExchangeQueuesReference_184f69526b094d7fa5a7ccb1683bc460" Accessibility="Public" TypeID="UIGenerated_3003da559f8d4b6380888ab4f7cd2abf_ExchangeQueues" Parent="Exchange.Queues.Root.Folder" />
      <ComponentReference ID="UIGenerated_6fb4e110084046579526d585004e81e5_QueuesReference_fa20917e343e45178707eb03ff97e5c6" Accessibility="Public" TypeID="UIGenerated_6fb4e110084046579526d585004e81e5_Queues" Parent="UIGenerated_3003da559f8d4b6380888ab4f7cd2abf_ExchangeQueues" />
    </ComponentReferences>
    <ComponentOverrides>
      <ComponentOverride ID="UIGenerated_3003da559f8d4b6380888ab4f7cd2abf_ExchangeQueuesOverride" TypeID="UIGenerated_3003da559f8d4b6380888ab4f7cd2abf_ExchangeQueues">
        <Bindings>
          <Binding PropertyId="ConfigType">
            <SimpleValue Type="xsd://string" Value="Microsoft.SystemCenter.Visualization.Library!GridLayout01CellFillConfig" />
          </Binding>
          <Binding PropertyId="CellRegionMappings">
            <ComplexValueCollection Type="xsd://Microsoft.SystemCenter.Visualization.Library!Microsoft.SystemCenter.Visualization.LayoutConfig/CellRegionMapping[]">
              <ComplexValue Type="xsd://Microsoft.SystemCenter.Visualization.Library!Microsoft.SystemCenter.Visualization.LayoutConfig/CellRegionMapping">
                <Binding PropertyId="RegionContent">
                  <SimpleValue Type="xsd://string" Value="Exchange.Queues!UIGenerated_6fb4e110084046579526d585004e81e5_QueuesReference_fa20917e343e45178707eb03ff97e5c6" />
                </Binding>
                <Binding PropertyId="RegionId">
                  <SimpleValue Type="xsd://string" Value="UIGeneratedRegion_5758178db79b4e04a9d0820e961ec346" />
                </Binding>
                <Binding PropertyId="CellIndex">
                  <SimpleValue Type="xsd://int" Value="0" />
                </Binding>
              </ComplexValue>
            </ComplexValueCollection>
          </Binding>
        </Bindings>
      </ComponentOverride>
      <ComponentOverride ID="UIGenerated_6fb4e110084046579526d585004e81e5_QueuesOverride" TypeID="UIGenerated_6fb4e110084046579526d585004e81e5_Queues" Context="/Exchange.Queues!UIGenerated_3003da559f8d4b6380888ab4f7cd2abf_ExchangeQueues/Microsoft.SystemCenter.Visualization.Library!Microsoft.SystemCenter.Visualization.GridLayout/Microsoft.SystemCenter.Visualization.Library!Microsoft.SystemCenter.Visualization.GridLayout/UIGeneratedRegion_5758178db79b4e04a9d0820e961ec346/Microsoft.SystemCenter.Visualization.Library!ComposedRegion/Exchange.Queues!UIGenerated_6fb4e110084046579526d585004e81e5_Queues/">
        <Bindings>
          <Binding PropertyId="Script">
            <SimpleValue Type="xsd://string" Value=" &#xD;&#xA;function SetPerfCounterLastValue($dataObject,$instance,$criteria,$counterName,$startTime,$endTime) &#xD;&#xA;{ &#xD;&#xA;# Get the performance data using the GetMonitoringPerformanceData method on the instance object. &#xD;&#xA;# This method requires the criteria for which data should be returned. &#xD;&#xA;$performanceDataCollection = $instance.GetMonitoringPerformanceData($criteria) &#xD;&#xA;# End the function and return null if no perf data found. &#xD;&#xA;#if &#xD;&#xA;($performanceDataCollection.Count -ne 1) &#xD;&#xA;{ return $null } # If a collection of performance is returned, we only want the first. &#xD;&#xA;$performanceData = $performanceDataCollection[0] #Limit our data to the counters collected between the specified times. &#xD;&#xA;$dataCollection = $performanceData.GetValues($startTime, $endTime) # End the function and return null if no perf data between dates. if ($dataCollection.Count -lt 1) { return $null } # We only want the last collected value added to the data object. &#xD;&#xA;$lastDataValue = $dataCollection[$dataCollection.Count - 1].SampleValue &#xD;&#xA;$dataObject[$counterName] = [Math]::Round($lastDataValue, 2) &#xD;&#xA;&#xD;&#xA;} &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;$endTime = [DateTime]::UtcNow &#xD;&#xA;$timeDiff = [TimeSpan]::FromHours(1) &#xD;&#xA;$startTime = $endTime - $timeDiff &#xD;&#xA;$startTimeext=$endTime-([TimeSpan]::FromHours(12)) &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;$class=get-scomclass -Name Exchange.Queues.Server   &#xD;&#xA;#$globalSelectedItemInstance = Get-SCOMClassInstance -Id $globalSelectedItem[&quot;Id&quot;] &#xD;&#xA;#$queues=$globalSelectedItemInstance.GetRelatedMonitoringObjects($class) &#xD;&#xA;&#xD;&#xA;$queues=get-scomclassinstance -Class $class &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;foreach ($item in $queues) &#xD;&#xA;{ &#xD;&#xA;&#xD;&#xA;$dataObject=$ScriptContext.CreateFromObject($item,&quot;Id=Id,State=HealthState,DisplayName=DisplayName&quot;,$null) # &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;$PerfCriteria = New-Object Microsoft.EnterpriseManagement.Monitoring.MonitoringPerformanceDataCriteria(&quot;CounterName='External Aggregate Delivery Queue Length (All External Queues)' and ObjectName='MSExchangeTransport Queues'&quot;) &#xD;&#xA;&#xD;&#xA;SetPerfCounterLastValue $dataObject $item $PerfCriteria 'EXT-All' $startTime $endTime &#xD;&#xA;&#xD;&#xA;$PerfCriteria = New-Object Microsoft.EnterpriseManagement.Monitoring.MonitoringPerformanceDataCriteria(&quot;CounterName='Internal Aggregate Delivery Queue Length (All Internal Queues)' and ObjectName='MSExchangeTransport Queues'&quot;) &#xD;&#xA;&#xD;&#xA;SetPerfCounterLastValue $dataObject $item $PerfCriteria 'INT-All' $startTime $endTime &#xD;&#xA;&#xD;&#xA;$PerfCriteria = New-Object Microsoft.EnterpriseManagement.Monitoring.MonitoringPerformanceDataCriteria(&quot;CounterName='Submission Queue Length' and ObjectName='MSExchangeTransport Queues'&quot;) &#xD;&#xA;&#xD;&#xA;SetPerfCounterLastValue $dataObject $item $PerfCriteria 'Submission' $startTime $endTime &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;$PerfCriteria = New-Object Microsoft.EnterpriseManagement.Monitoring.MonitoringPerformanceDataCriteria(&quot;CounterName='Active Mailbox Delivery Queue Length' and ObjectName='MSExchangeTransport Queues'&quot;) &#xD;&#xA;&#xD;&#xA;SetPerfCounterLastValue $dataObject $item $PerfCriteria 'ActMbxDelivery' $startTime $endTime &#xD;&#xA;&#xD;&#xA;$PerfCriteria = New-Object Microsoft.EnterpriseManagement.Monitoring.MonitoringPerformanceDataCriteria(&quot;CounterName='Active Non-Smtp Delivery Queue Length' and ObjectName='MSExchangeTransport Queues'&quot;) &#xD;&#xA;&#xD;&#xA;SetPerfCounterLastValue $dataObject $item $PerfCriteria 'Non-SMTP' $startTime $endTime &#xD;&#xA;&#xD;&#xA;$PerfCriteria = New-Object Microsoft.EnterpriseManagement.Monitoring.MonitoringPerformanceDataCriteria(&quot;CounterName='External Active Remote delivery Queue Length' and ObjectName='MSExchangeTransport Queues'&quot;) &#xD;&#xA;&#xD;&#xA;SetPerfCounterLastValue $dataObject $item $PerfCriteria 'RemoteDelivery' $startTime $endTime &#xD;&#xA;&#xD;&#xA;$PerfCriteria = New-Object Microsoft.EnterpriseManagement.Monitoring.MonitoringPerformanceDataCriteria(&quot;CounterName='Retry Non-Smtp Delivery Queue Length' and ObjectName='MSExchangeTransport Queues'&quot;) &#xD;&#xA;&#xD;&#xA;SetPerfCounterLastValue $dataObject $item $PerfCriteria 'RetryNonSMTP' $startTime $endTime &#xD;&#xA;&#xD;&#xA;$PerfCriteria = New-Object Microsoft.EnterpriseManagement.Monitoring.MonitoringPerformanceDataCriteria(&quot;CounterName='External Retry Remote Delivery Queue Length' and ObjectName='MSExchangeTransport Queues'&quot;) &#xD;&#xA;&#xD;&#xA;SetPerfCounterLastValue $dataObject $item $PerfCriteria 'RetryRemote' $startTime $endTime &#xD;&#xA;&#xD;&#xA;$PerfCriteria = New-Object Microsoft.EnterpriseManagement.Monitoring.MonitoringPerformanceDataCriteria(&quot;CounterName='Unreachable Queue Length' and ObjectName='MSExchangeTransport Queues'&quot;) &#xD;&#xA;&#xD;&#xA;SetPerfCounterLastValue $dataObject $item $PerfCriteria 'Unreachable' $startTime $endTime &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;$PerfCriteria = New-Object Microsoft.EnterpriseManagement.Monitoring.MonitoringPerformanceDataCriteria(&quot;CounterName='Internal Retry Remote Delivery Queue Length' and ObjectName='MSExchangeTransport Queues'&quot;) &#xD;&#xA;&#xD;&#xA;SetPerfCounterLastValue $dataObject $item $PerfCriteria 'InternalRetry' $startTime $endTime &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;$ScriptContext.ReturnCollection.Add($dataObject) &#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" />
          </Binding>
        </Bindings>
      </ComponentOverride>
    </ComponentOverrides>
    <ComponentImplementations>
      <ComponentImplementation ID="UIGenerated_3003da559f8d4b6380888ab4f7cd2abf_ExchangeQueuesImplementation" Accessibility="Public" TypeId="UIGenerated_3003da559f8d4b6380888ab4f7cd2abf_ExchangeQueues" Platform="Wpf, Silverlight">
        <Composite>
          <Base />
        </Composite>
      </ComponentImplementation>
      <ComponentImplementation ID="UIGenerated_6fb4e110084046579526d585004e81e5_QueuesImplementation" Accessibility="Public" TypeId="UIGenerated_6fb4e110084046579526d585004e81e5_Queues" Platform="Wpf, Silverlight">
        <Composite>
          <Base />
        </Composite>
      </ComponentImplementation>
    </ComponentImplementations>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="Exchange.Queues">
          <Name>Exchange Queues Monitoring MP for Exchange 2013 and Later</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ActiveMailboxDeliveryQueueLength.PerformanceCollection.Rule">
          <Name>Exchange Queue ActiveMailboxDeliveryQueueLength Performance Collection Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ActiveNonSmtpDeliveryQueueLength.PerformanceCollection.Rule">
          <Name>Exchange Queue ActiveNonSmtpDeliveryQueueLength Performance Collection Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ExternalActiveRemoteDeliveryqueueLength.PerformanceCollection.Rule">
          <Name>Exchange Queue ExternalActiveRemoteDeliveryqueueLength Performance Collection Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ExternalAggregateDeliveryQueueLength.PerformanceCollection.Rule">
          <Name>Exchange Queue ExternalAggregateDeliveryQueueLength Performance Collection Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ExternalRetryRemoteDeliveryQueueLength.PerformanceCollection.Rule">
          <Name>Exchange Queue ExternalRetryRemoteDeliveryQueueLength Performance Collection Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.InternalAggregateDeliveryQueueLength.PerformanceCollection.Rule">
          <Name>Exchange Queue InternalAggregateDeliveryQueueLength Performance Collection Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.InternalRetryRemoteDeliveryQueueLength.PerformanceCollection.Rule">
          <Name>Exchange Queue InternalRetryRemoteDeliveryQueueLength Performance Collection Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.RetryNonSmtpDeliveryQueueLength.PerformanceCollection.Rule">
          <Name>Exchange Queue RetryNonSmtpDeliveryQueueLength Performance Collection Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.SubmissionQueueLength.PerformanceCollection.Rule">
          <Name>Exchange Queue SubmissionQueueLength Performance Collection Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.UnreachableQueueLength.PerformanceCollection.Rule">
          <Name>Exchange Queue UnreachableQueueLength Performance Collection Rule</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.Root.Folder">
          <Name>Queues</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ExternalAggregateDeliveryQueueLength.Monitor">
          <Name>External Aggregate Delivery Queue Length Monitor</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ExternalAggregateDeliveryQueueLength.Monitor.AlertMessage">
          <Name>Too many Items in Exchange External Aggregate Delivery Queue</Name>
          <Description>Too many Items in Exchange External Aggregate Delivery Queue

Last Sampled Value: ({0})</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ExternalAggregateDeliveryQueueLength.Monitor" SubElementID="ConditionFalse">
          <Name>ConditionFalse</Name>
          <Description>ConditionFalse</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ExternalAggregateDeliveryQueueLength.Monitor" SubElementID="ConditionTrue">
          <Name>ConditionTrue</Name>
          <Description>ConditionTrue</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ExternalRetryRemoteDeliveryQueue.Monitor">
          <Name>External Retry Remote Delivery Queue Length Monitor</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ExternalRetryRemoteDeliveryQueue.Monitor.AlertMessage">
          <Name>Too many Items in Exchange External Retry Remote Delivery Queue</Name>
          <Description>Too many Items in Exchange External Retry Remote Delivery Queue

Last Sampled Value: ({0})</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ExternalRetryRemoteDeliveryQueue.Monitor" SubElementID="ConditionFalse">
          <Name>ConditionFalse</Name>
          <Description>ConditionFalse</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.ExternalRetryRemoteDeliveryQueue.Monitor" SubElementID="ConditionTrue">
          <Name>ConditionTrue</Name>
          <Description>ConditionTrue</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.InternalAggregateDeliveryQueueLength.Monitor">
          <Name>Internal Aggregate Delivery Queue Length Monitor</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.InternalAggregateDeliveryQueueLength.Monitor.AlertMessage">
          <Name>Too many Items in Internal Aggregate Delivery Queue</Name>
          <Description>Too many Items in Internal Aggregate Delivery Queue

Last Sampled Value: ({0})</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.InternalAggregateDeliveryQueueLength.Monitor" SubElementID="ConditionFalse">
          <Name>ConditionFalse</Name>
          <Description>ConditionFalse</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.InternalAggregateDeliveryQueueLength.Monitor" SubElementID="ConditionTrue">
          <Name>ConditionTrue</Name>
          <Description>ConditionTrue</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.InternalRetryRemoteDeliveryQueueLength.Monitor">
          <Name>Internal Retry Remote Delivery Queue Length Monitor</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.InternalRetryRemoteDeliveryQueueLength.Monitor.AlertMessage">
          <Name>Too many Items in Internal Retry Remote Delivery Queue</Name>
          <Description>Too many Items in Internal Retry Remote Delivery Queue

Last Sampled Value: ({0})</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.InternalRetryRemoteDeliveryQueueLength.Monitor" SubElementID="ConditionFalse">
          <Name>ConditionFalse</Name>
          <Description>ConditionFalse</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.InternalRetryRemoteDeliveryQueueLength.Monitor" SubElementID="ConditionTrue">
          <Name>ConditionTrue</Name>
          <Description>ConditionTrue</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.RetryNonSmtpDeliveryQueueLength.Monitor">
          <Name>Retry Non-Smtp Delivery Queue Length Monitor</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.RetryNonSmtpDeliveryQueueLength.Monitor.AlertMessage">
          <Name>Too many Items in  Retry Non-SMTP  Delivery Queue</Name>
          <Description>Too many Items in  Retry Non-SMTP  Delivery Queue

Last Sampled Value: ({0})</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.RetryNonSmtpDeliveryQueueLength.Monitor" SubElementID="ConditionFalse">
          <Name>ConditionFalse</Name>
          <Description>ConditionFalse</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.RetryNonSmtpDeliveryQueueLength.Monitor" SubElementID="ConditionTrue">
          <Name>ConditionTrue</Name>
          <Description>ConditionTrue</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.RetryMailboxDeliveryQueueLength.Monitor">
          <Name>Retry Mailbox Delivery Queue Length Monitor</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.RetryMailboxDeliveryQueueLength.Monitor.AlertMessage">
          <Name>Too many Items in  Retry Mailbox Delivery Queue</Name>
          <Description>Too many Items in  Retry Mailbox Delivery Queue

Last Sampled Value: ({0})</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.RetryMailboxDeliveryQueueLength.Monitor" SubElementID="ConditionFalse">
          <Name>ConditionFalse</Name>
          <Description>ConditionFalse</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.RetryMailboxDeliveryQueueLength.Monitor" SubElementID="ConditionTrue">
          <Name>ConditionTrue</Name>
          <Description>ConditionTrue</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.SubmissionQueueLength.Monitor">
          <Name>Submission Queue Length Monitor</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.SubmissionQueueLength.Monitor.AlertMessage">
          <Name>Too many Items in Exchange Submission Queue</Name>
          <Description>Too many Items in Exchange Submission Queue

Last Sampled Value: ({0})</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.SubmissionQueueLength.Monitor" SubElementID="ConditionFalse">
          <Name>ConditionFalse</Name>
          <Description>ConditionFalse</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.SubmissionQueueLength.Monitor" SubElementID="ConditionTrue">
          <Name>ConditionTrue</Name>
          <Description>ConditionTrue</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.UnreachableQueueLength.Monitor">
          <Name>Unreachable Queue Length Monitor</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.UnreachableQueueLength.Monitor.AlertMessage">
          <Name>Too many Items in Exchange Unreachable Queue</Name>
          <Description>Too many Items in Exchange Unreachable Queue

Last Sampled Value: ({0})</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.UnreachableQueueLength.Monitor" SubElementID="ConditionFalse">
          <Name>ConditionFalse</Name>
          <Description>ConditionFalse</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.UnreachableQueueLength.Monitor" SubElementID="ConditionTrue">
          <Name>ConditionTrue</Name>
          <Description>ConditionTrue</Description>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.Server">
          <Name>Exchange Queue Server</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.Server.State.View">
          <Name>Queue Server Health</Name>
        </DisplayString>
        <DisplayString ElementID="UIGenerated_3003da559f8d4b6380888ab4f7cd2abf_ExchangeQueues">
          <Name>Queue Dashboard</Name>
        </DisplayString>
        <DisplayString ElementID="UIGenerated_3003da559f8d4b6380888ab4f7cd2abf_ExchangeQueuesOverride">
          <Name>Queue Dashboard</Name>
        </DisplayString>
        <DisplayString ElementID="UIGenerated_6fb4e110084046579526d585004e81e5_Queues">
          <Name>Queues</Name>
        </DisplayString>
        <DisplayString ElementID="UIGenerated_6fb4e110084046579526d585004e81e5_QueuesOverride">
          <Name>Queues</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.QueueServerToExchangeServer.Performance.Rollup.Monitor">
          <Name>Queue Server to Exchange Server Performance Rollup Monitor</Name>
        </DisplayString>
        <DisplayString ElementID="Exchange.Queues.Server.Performance.View">
          <Name>Queue Performance</Name>
        </DisplayString>
      </DisplayStrings>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>